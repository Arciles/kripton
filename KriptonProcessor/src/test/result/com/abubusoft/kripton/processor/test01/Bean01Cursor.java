package com.abubusoft.kripton.processor.test01;

import android.database.Cursor;
import java.util.LinkedList;

/**
 * Generated by Kripton Library.
 *
 *  @since Wed May 11 23:20:07 CEST 2016
 *
 */
public class Bean01Cursor {
  protected Cursor cursor;

  /**
   * Index for column "id"
   */
  protected int index0;

  Bean01Cursor(Cursor cursor) {
    wrap(cursor);
  }

  public Bean01Cursor wrap(Cursor cursor) {
    this.cursor=cursor;

    index0=cursor.getColumnIndex("id");

    return this;
  }

  public LinkedList<Bean01> execute() {

    LinkedList<Bean01> resultList=new LinkedList<Bean01>();
    Bean01 resultBean=new Bean01();

    if (cursor.moveToFirst()) {
      do
       {
        resultBean=new Bean01();

        if (index0>=0 && !cursor.isNull(index0)) { resultBean.setId(cursor.getLong(index0));}

        resultList.add(resultBean);
      } while (cursor.moveToNext());
    }
    cursor.close();

    return resultList;
  }

  public void executeListener(OnBean01Listener listener) {
    Bean01 resultBean=new Bean01();

    if (cursor.moveToFirst()) {
      do
       {
        if (index0>=0) { resultBean.setId(0);}

        if (index0>=0 && !cursor.isNull(index0)) { resultBean.setId(cursor.getLong(index0));}

        listener.onRow(resultBean, cursor.getPosition(),cursor.getCount());
      } while (cursor.moveToNext());
    }
    cursor.close();
  }

  public static Bean01Cursor create(Cursor cursor) {
    return new Bean01Cursor(cursor);
  }

  /**
   * Listener for row read from database.
   *
   * @param bean bean read from database. Only selected columns/fields are valorized.
   * @param rowPosition position of row.
   * @param rowCount total number of rows.
   *
   */
  public interface OnBean01Listener {
    void onRow(Bean01 bean, int rowPosition, int rowCount);
  }
}
