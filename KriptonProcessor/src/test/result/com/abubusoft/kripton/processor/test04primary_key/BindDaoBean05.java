package com.abubusoft.kripton.processor.test04primary_key;

import android.database.Cursor;
import com.abubusoft.kripton.android.sqlite.AbstractBindDao;
import java.lang.Override;
import java.lang.String;

/**
 * Generated by Kripton Library.
 *
 *  @since Sat May 21 00:10:57 CEST 2016
 *
 */
public class BindDaoBean05 extends AbstractBindDao implements DaoBean05 {
  /**
   * <p>Projected column are:</p>
   *
   * <pre>[pk, text, content]</pre>
   *
   * <p>Query used with this BindSelect is:</p>
   *
   * <pre>select pk, text, content from bean05 where pk=${id}</pre>
   *
   * <p>Its parameters are:</p>
   *
   * <pre>[id]</pre>
   *
   * @param id
   */
  @Override
  public Bean05 selectOne(long id) {
    // build where condition
    String[] args={String.valueOf(id)};

    Cursor cursor = database.rawQuery("select pk, text, content from bean05 where pk=?", args);

    Bean05 resultBean=null;

    if (cursor.moveToFirst()) {

      int index0=cursor.getColumnIndex("pk");
      int index1=cursor.getColumnIndex("text");
      int index2=cursor.getColumnIndex("content");

      resultBean=new Bean05();

      if (!cursor.isNull(index0)) { resultBean.setPk(cursor.getLong(index0)); }
      if (!cursor.isNull(index1)) { resultBean.setText(cursor.getString(index1)); }
      if (!cursor.isNull(index2)) { resultBean.setContent(cursor.getBlob(index2)); }

    }
    cursor.close();

    return resultBean;
  }

  /**
   *
   * ModelAnnotation [name=com.abubusoft.kripton.android.annotation.BindDeleteRaw, attributes={where=pk=${id}}]
   */
  @Override
  public long deleteOne(long id) {
    String[] whereConditions={String.valueOf(id)};
    int result = database.delete("bean05", "pk=?", whereConditions);
    return result;
  }

  /**
   *
   * ModelAnnotation [name=com.abubusoft.kripton.android.annotation.BindDelete, attributes={where=pk=${bean.pk} and pk=${a}}]
   */
  @Override
  public long deleteOne(Bean05 bean, long a) {

    String[] whereConditions={String.valueOf(bean.getPk()), String.valueOf(a)};
    int result = database.delete("bean05", "pk=? and pk=?", whereConditions);
    return result;
  }

  /**
   *
   * ModelAnnotation [name=com.abubusoft.kripton.android.annotation.BindUpdate, attributes={excludedFields={}, value={}, where=pk=${bean.pk} and pk=${a}}]
   */
  @Override
  public long updateOne(Bean05 bean, long a) {
    contentValues.clear();

    contentValues.put("text", bean.getText());
    contentValues.put("content", bean.getContent());

    String[] whereConditions={String.valueOf(bean.getPk()), String.valueOf(a)};
    int result = database.update("bean05", contentValues, "pk=? and pk=?", whereConditions);
    return result;
  }

  /**
   * <p>Projected column are:</p>
   *
   * <pre>[content]</pre>
   *
   * <p>Query used with this BindSelect is:</p>
   *
   * <pre>select content from bean05 where pk=${id}</pre>
   *
   * <p>Its parameters are:</p>
   *
   * <pre>[id]</pre>
   *
   * @param id
   */
  @Override
  public byte[] getOne(long id) {
    // build where condition
    String[] args={String.valueOf(id)};

    Cursor cursor = database.rawQuery("select content from bean05 where pk=?", args);
    byte[] result=null;

    try {
      if (cursor.moveToFirst()) {

        do
         {
          if (cursor.isNull(0)) { return null; }
          result=cursor.getBlob(0);
        } while (cursor.moveToNext());
      }
    } catch(Throwable e) {
      throw (e);
    } finally {
      if (cursor!=null)
       {
        cursor.close();
      }
    }
    return result;
  }

  /**
   *
   * ModelAnnotation [name=com.abubusoft.kripton.android.annotation.BindUpdateRaw, attributes={where=pk=${uid}}]
   */
  @Override
  public long updateOne(String text, long uid) {
    contentValues.clear();

    contentValues.put("text", text);
    String[] whereConditions={String.valueOf(uid)};
    int result = database.update("bean05", contentValues, "pk=?", whereConditions);
    return result;
  }
}
